В данном приложении реализовано REST API по работе с меню ресторана.

Установка.

 - Установка в Docker контейнере:

    1) Установить Docker на ПК: https://www.docker.com/
    2) Загрузите приложение.

         Для загрузки проекта можно воспользоваться приложением Git: https://git-scm.com/downloads
        (либо можно скачать архивом по ссылке https://github.com/asanivv/REST-API_restaurant.git и распаковать)

        Создаем пустой каталог на ПК и в терминале переходим в созданную папку.
        (можно открыть терминал сразу в папке или перейти в нужный каталог используя команды терминала)
        Далее выполняем команду:

                 git clone https://github.com/asanivv/REST-API_restaurant.git

        Эта команда загрузит проект в Ваш каталог и в ней появится новый каталог с названием:REST-API_restaurant.

        Необходимо перейти в каталог REST-API_restaurant и в нем создать файл .env со следующим содержимым:

            HOST=
            DB_PORT=
            DB_USERNAME=
            DB_PASSWORD=
            DATABASE=

        Необходимо заполнить поля данными указанными ранее при создании новой БД PostgreSQL.

            HOST - имя сервера
            DB_PORT - порт по которому доступен сервер
            DB_USERNAME - пользователь
            DB_PASSWORD - пароль пользователя
            DATABASE - название БД

        Например:

        HOST=localhost
        DB_PORT=5432
        DB_USERNAME=postgres
        DB_PASSWORD=password
        DATABASE=restaurant

        Сохраняем файл и закрываем его.

    3) Находясь в каталоге REST-API_restaurant, через терминал выполнить следующую команду:

        docker-compose up -d

       После успешной сборки контейнера к приложению можно получить доступ,например, по такой ссылке :

            http://127.0.0.1:8000/docs


 - Запуск тестов:
    ВНИМАНИЕ!!! Запуск тестов приведет к удалению данных из БД. Рекомендуется использовать перед использованием приложения.
    Для выполнения тестов выполните слудующую команду из каталога REST-API_restaurant:

            docker-compose -f docker-compose-tests.yml up

            или

            docker-compose -f docker-compose-tests.yml up -d
            ( информацию о результатах тестов можно посмотреть так: docker logs menu_tests )


 - Запуск приложения в обычном режиме:


    Проект использует интерпретатор Python и PostgreSQL в качестве БД, поэтому их необходимо предварительно установить:

    Python: https://www.python.org/downloads/
    Приложение создано и протестировано на версии Python 3.11.0. Рекомендуется использовать данную версию или выше.

    PostgreSQL: https://www.postgresql.org/download/
    После установки СУБД PostgreSQL необходимо создать пустую базу данных на сервере.

    Для загрузки проекта можно воспользоваться приложением Git: https://git-scm.com/downloads
    (либо можно скачать архивом по ссылке https://github.com/asanivv/REST-API_restaurant.git и распаковать)

    Создаем пустой каталог на ПК и в терминале переходим в созданную папку.
    (можно открыть терминал сразу в папке или перейти в нужный каталог используя команды терминала)
    Далее выполняем команду:

         git clone https://github.com/asanivv/REST-API_restaurant.git

    Эта команда загрузит проект в Ваш каталог и в ней появится новый каталог с названием:REST-API_restaurant.

    Необходимо перейти в каталог REST-API_restaurant и в нем создать файл .env со следующим содержимым:

        HOST=
        DB_PORT=
        DB_USERNAME=
        DB_PASSWORD=
        DATABASE=

    Необходимо заполнить поля данными указанными ранее при создании новой БД PostgreSQL.

        HOST - имя сервера
        DB_PORT - порт по которому доступен сервер
        DB_USERNAME - пользователь
        DB_PASSWORD - пароль пользователя
        DATABASE - название БД

    Например:

    HOST=localhost
    DB_PORT=5432
    DB_USERNAME=postgres
    DB_PASSWORD=password
    DATABASE=restaurant

    Сохраняем файл и закрываем его.
    Далее нам нужно установить необходимые библиотеки для проекта.
    Для этого сначала создаем виртуальное откружение следующей командой:
        python -m venv venv
    (Перед выполнением команды убедитесь, что Вы находитесь в директории REST-API_restaurant)

    После успешного выполнения команды должен создаться новый каталог с именем: venv

    Далее активируем наше виртуальное окружение.
    Для Window команда будет следующая : venv\Scripts\activate.bat
    Для Linux: source venv/bin/activate

    После успешного выполнения команды к названию пути в терминале добавится префикс: (venv)
    Более подробно можно ознакомиться здесь: https://docs.python.org/3/library/venv.html

   Далее устанавливаем необходимые библиотеки:

    pip install -r .\restaurant\requirements.txt

    Перед запуском приложения убедитесь, что каталог REST-API_restaurant имеет следующую структуру:

    REST-API_restaurant:
            \alembic
            \restaurant
            \venv
            \.env
            \.gitignore
            \alembic.ini
            \docker-compose.yml
            \docker-compose-tests.yml
            \Readme.txt               

    Для запуска приложения перейдите в каталог restaurant и воспользуйтесь командой:
    
        uvicorn main:app --reload

    Либо

        uvicorn main:app --reload --host 0.0.0.0

    Тогда приложение должно быть доступно с других хостов.

    После запуска приложения к нему можно получить доступ,например, по такой ссылке :

        http://127.0.0.1:8000/docs

    Если приложение не запускается, убедитесь что используете рекомендованную версию Python и корректно заполнен файл .env с
    настройками подключения к БД.


 Спасибо, что выбрали наш продукт! :)



